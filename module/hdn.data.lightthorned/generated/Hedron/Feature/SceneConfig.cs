// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Hedron.Feature
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SceneConfig : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SceneConfig GetRootAsSceneConfig(ByteBuffer _bb) { return GetRootAsSceneConfig(_bb, new SceneConfig()); }
  public static SceneConfig GetRootAsSceneConfig(ByteBuffer _bb, SceneConfig obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifySceneConfig(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, SceneConfigVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SceneConfig __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool GenerateProxyGeo { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Hedron.Feature.LightConfig? LightConfig { get { int o = __p.__offset(6); return o != 0 ? (Hedron.Feature.LightConfig?)(new Hedron.Feature.LightConfig()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Hedron.Feature.SceneConfig> CreateSceneConfig(FlatBufferBuilder builder,
      bool generate_proxy_geo = false,
      Offset<Hedron.Feature.LightConfig> light_configOffset = default(Offset<Hedron.Feature.LightConfig>)) {
    builder.StartTable(2);
    SceneConfig.AddLightConfig(builder, light_configOffset);
    SceneConfig.AddGenerateProxyGeo(builder, generate_proxy_geo);
    return SceneConfig.EndSceneConfig(builder);
  }

  public static void StartSceneConfig(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddGenerateProxyGeo(FlatBufferBuilder builder, bool generateProxyGeo) { builder.AddBool(0, generateProxyGeo, false); }
  public static void AddLightConfig(FlatBufferBuilder builder, Offset<Hedron.Feature.LightConfig> lightConfigOffset) { builder.AddOffset(1, lightConfigOffset.Value, 0); }
  public static Offset<Hedron.Feature.SceneConfig> EndSceneConfig(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Hedron.Feature.SceneConfig>(o);
  }
  public static void FinishSceneConfigBuffer(FlatBufferBuilder builder, Offset<Hedron.Feature.SceneConfig> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSceneConfigBuffer(FlatBufferBuilder builder, Offset<Hedron.Feature.SceneConfig> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class SceneConfigVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*GenerateProxyGeo*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTable(tablePos, 6 /*LightConfig*/, Hedron.Feature.LightConfigVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
